[{"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/App.js":"1","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/RegisterScreen.js":"2","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/PostScreen.js":"3","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/Topbar.js":"4","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/BannerPosts.js":"5","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/models/commentHandler.js":"6","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/Post.js":"7","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/AddComment.js":"8","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/models/userHandler.js":"9","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/store/reducers.js":"10","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/UsersList.js":"11","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/ProfileScreen.js":"12","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/HomeScreen.js":"13","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/UserProfileScreen.js":"14","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/LogScreen.js":"15","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/Comment.js":"16","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/MesPostsScreen.js":"17","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/AddPost.js":"18","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/LeftAsideDesktop.js":"19","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/models/postHandler.js":"20","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/serviceWorkerRegistration.js":"21","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/store/store.js":"22","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/LeftAside.js":"23","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/PostSetting.js":"24","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/reportWebVitals.js":"25","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/BottomNav.js":"26","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/EditScreen.js":"27","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/EditPasswordScreen.js":"28","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/helpers/config.js":"29","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/index.js":"30","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/PostBanner.js":"31","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/Loader.js":"32"},{"size":3948,"mtime":1609615229001,"results":"33","hashOfConfig":"34"},{"size":5776,"mtime":1609618827794,"results":"35","hashOfConfig":"34"},{"size":2276,"mtime":1609387938236,"results":"36","hashOfConfig":"34"},{"size":1782,"mtime":1609615267673,"results":"37","hashOfConfig":"34"},{"size":1640,"mtime":1609611011821,"results":"38","hashOfConfig":"34"},{"size":1018,"mtime":1609387938240,"results":"39","hashOfConfig":"34"},{"size":4130,"mtime":1609387938248,"results":"40","hashOfConfig":"34"},{"size":1694,"mtime":1609615229001,"results":"41","hashOfConfig":"34"},{"size":2365,"mtime":1609394643943,"results":"42","hashOfConfig":"34"},{"size":1678,"mtime":1609607178949,"results":"43","hashOfConfig":"34"},{"size":1042,"mtime":1609392756252,"results":"44","hashOfConfig":"34"},{"size":2030,"mtime":1609389514175,"results":"45","hashOfConfig":"34"},{"size":897,"mtime":1609615229001,"results":"46","hashOfConfig":"34"},{"size":2577,"mtime":1609396109372,"results":"47","hashOfConfig":"34"},{"size":4314,"mtime":1609618781475,"results":"48","hashOfConfig":"34"},{"size":3632,"mtime":1609615229001,"results":"49","hashOfConfig":"34"},{"size":1313,"mtime":1609608384041,"results":"50","hashOfConfig":"34"},{"size":4870,"mtime":1609387938240,"results":"51","hashOfConfig":"34"},{"size":2388,"mtime":1609621666436,"results":"52","hashOfConfig":"34"},{"size":2373,"mtime":1609608308814,"results":"53","hashOfConfig":"34"},{"size":5064,"mtime":1608988653387,"results":"54","hashOfConfig":"34"},{"size":215,"mtime":1609387938236,"results":"55","hashOfConfig":"34"},{"size":1529,"mtime":1609387938252,"results":"56","hashOfConfig":"34"},{"size":1149,"mtime":1609387938248,"results":"57","hashOfConfig":"34"},{"size":364,"mtime":1608988653383,"results":"58","hashOfConfig":"34"},{"size":3238,"mtime":1609611167535,"results":"59","hashOfConfig":"34"},{"size":3195,"mtime":1609615229001,"results":"60","hashOfConfig":"34"},{"size":2316,"mtime":1609615250905,"results":"61","hashOfConfig":"34"},{"size":84,"mtime":1609387938248,"results":"62","hashOfConfig":"34"},{"size":941,"mtime":1609387938236,"results":"63","hashOfConfig":"34"},{"size":384,"mtime":1609615229001,"results":"64","hashOfConfig":"34"},{"size":511,"mtime":1609387938248,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"mjza0i",{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/App.js",["146","147","148"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LogScreen from \"./screens/LogScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddPost from \"./screens/AddPost\";\nimport { getAllUsers, logWithToken } from \"./models/userHandler\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport PostScreen from \"./screens/PostScreen\";\nimport MesPostsScreen from \"./screens/MesPostsScreen\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Topbar from \"./components/Topbar\";\nimport BottomNav from \"./components/BottomNav\";\nimport Loader from \"./components/Loader\";\nimport \"./sass/app.scss\";\nimport LeftAsideDesktop from \"./components/LeftAsideDesktop\";\nimport BannerPosts from \"./components/BannerPosts\";\nimport UsersList from \"./components/UsersList\";\nimport UserProfileScreen from \"./screens/UserProfileScreen\";\nimport EditScreen from \"./screens/EditScreen\";\nimport EditPasswordScreen from \"./screens/EditPasswordScreen\";\n\nfunction App(props) {\n  const [showAside, setshowAside] = useState(false);\n  const [register, setregister] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"token\")\n    if ( token && !props.logged) {\n      getAllUsers(token).then((users) => {\n        props.setUsers(users.data.users);\n      });\n      logWithToken(token)\n        .then((res) => {\n          props.setUserData(res.data.user);\n          props.setLoggin(true);\n          props.toggleLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          localStorage.removeItem(\"token\");\n          history.push(\"/\");\n        });\n    } else {\n      props.toggleLoading(false);\n    }\n  }, []);\n\n  const showAsideHandler = () => {\n    setshowAside(!showAside);\n  };\n\n  const showRegister = () => {\n    setregister(!register);\n  };\n\n  return props.state.loading ? (\n    <Loader />\n  ) : !props.state.logged ? (\n    !props.state.showRegister ? (\n      <LogScreen />\n    ) : (\n      <RegisterScreen />\n    )\n  ) : (\n    <div className=\"app\">\n      <Router history={history}>\n        <Topbar />\n        <UsersList />\n        <LeftAsideDesktop />\n        <main className=\"main\">\n          <Switch>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n            <Route path=\"/post/:id\">\n              <PostScreen />\n            </Route>\n            <Route path=\"/ajouter\">\n              <AddPost />\n            </Route>\n            <Route path=\"/profile\">\n              <ProfileScreen />\n            </Route>\n            <Route path=\"/edit-profile\">\n              <EditScreen />\n            </Route>\n            <Route path=\"/editer-motdepasse\">\n              <EditPasswordScreen />\n            </Route>\n            <Route path=\"/users/profile/:id\">\n              <UserProfileScreen />\n            </Route>\n            <Route path=\"/mesposts\">\n              <MesPostsScreen />\n            </Route>\n            <Route path=\"/not-found\" />\n          </Switch>\n        </main>\n        <BannerPosts />\n        <BottomNav />\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUserData: (data) =>\n      dispatch({\n        type: \"LOGIN_USER\",\n        payload: {\n          user: data,\n        },\n      }),\n    setLoggin: () =>\n      dispatch({\n        type: \"SET_LOGGIN\",\n        payload: {\n          loggin: true,\n        },\n      }),\n    toggleLoading: (bool) =>\n      dispatch({\n        type: \"TOGGLE_LOADING\",\n        payload: {\n          loading: bool,\n        },\n      }),\n    setUsers: (users) => {\n      dispatch({\n        type: \"SET_USERS_LIST\",\n        payload: { users },\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n",["149","150"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/RegisterScreen.js",["151","152","153","154"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"../assets/images/logos/icon-left-font-monochrome-black.svg\";\nimport { addUser,checkEmailFormBdd } from \"../models/userHandler\";\n\nfunction RegisterScreen(props) {\n  const [image, setimage] = useState(null);\n  const [alt, setalt] = useState(null);\n  const [imageFile, setimageFile] = useState(null);\n  const [data, setdata] = useState();\n  const [disabled, setdisabled] = useState(true);\n  const [error, seterror] = useState(null);\n  const history = useHistory();\n  const [passwordclear, setpasswordclear] = useState(false);\n\n\n  function getImage(evt) {\n    var tgt = evt.target,\n      files = tgt.files;\n    console.log(files);\n    if (files.length > 0) {\n      if (!files[0].type.match(/^image/)) {\n        seterror(\"Le format du media n'est pas pris en compte !\");\n        return setdisabled(true);\n      } else {\n        setimageFile(files);\n        setalt(files[0].name);\n        setdisabled(false);\n        seterror(null);\n        setimage(\"\");\n      }\n    }\n\n    // FileReader support\n    if (FileReader && files && files.length) {\n      var fr = new FileReader();\n      fr.onload = function () {\n        setimage(fr.result);\n      };\n      fr.readAsDataURL(files[0]);\n    }\n    // Not supported\n    else {\n      // fallback -- perhaps submit the input to an iframe and temporarily store\n      // them on the server until the user's session ends.\n    }\n  }\n\n  useEffect(() => {\n    resetForm();\n  }, []);\n\n  function submitPostForm(e) {\n    e.preventDefault();\n    addUser(data, imageFile)\n      .then((res) => {\n        if (res.status === 201) {\n          resetForm();\n          window.location.href = \"/\";\n        }else{\n        seterror(res.data.error)\n        }\n      })\n      .catch((err) => console.log(\"error:\", err));\n  }\n\n  function saveData(e) {\n    setdata({ ...data, [e.target.name]: e.target.value });\n  }\n\n  function checkEmail(e){\n    let email = e.target.value\n    checkEmailFormBdd(email).then(res=>{\n      console.log(res)\n      if(res.data.error){\n        seterror(res.data.error)\n      }else{\n        seterror(null)\n      }\n    }).catch(err=>{\n      console.log(err)\n    })\n  }\n\n  function resetForm() {\n    setimage(null);\n    document.querySelectorAll(\"input\").value = \"\";\n    document.querySelectorAll(\"textarea\").value = \"\";\n  }\n\n  return props.showRegister ? null : (\n    <section className=\"logscreen register\">\n      <div className=\"logo\">\n        {\" \"}\n        <img src={logo} alt=\"groupomania\" />{\" \"}\n      </div>\n      <div>\n        {\" \"}\n        <h1>Créer votre compte</h1>{\" \"}\n      </div>\n      <form onSubmit={submitPostForm} encType=\"multipart/form-data\">\n      {!error ? null : <div className=\"warning\">{error}</div>}\n        <div className=\"form-group\">\n          <label htmlFor=\"firstName\">Nom: </label>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"firstName\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"lastName\">Prénom: </label>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"lastName\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            required\n            onBlur={checkEmail}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Mot de passe :</label>\n          <div className=\"input-group\">\n            <input\n              onChange={saveData}\n              name=\"password\"\n              type={passwordclear? \"text\" : \"password\"}\n              className=\"form-control\"\n              id=\"password\"\n              />\n            <span \n              className={passwordclear ? \"fa fa-eye-slash\" : \"fa fa-eye\"} \n              onClick={()=>setpasswordclear(!passwordclear)}>\n                \n              </span>\n            </div>\n        </div>\n        <div className=\"form-group mt-3\">\n          <label htmlFor=\"file\">Choisir un Avatar</label>\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={getImage}\n            className=\"form-control\"\n            id=\"file\"\n          />\n        </div>\n        <div className=\"form-group form-check my-2\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"exampleCheck1\"\n            required\n          />\n          <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n            Accpeter les conditions d'utilisation\n          </label>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Créer mon compte\n        </button>\n      </form>\n      <div className=\"helpers\">\n        {\" \"}\n        <button className=\"helpers_button mb-5\">Se connecter</button>{\" \"}\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUserData: (data) =>\n      dispatch({\n        type: \"LOGIN_USER\",\n        payload: {\n          user: data,\n        },\n      }),\n    goToRegister: (bol) =>\n      dispatch({\n        type: \"GOTO_REGISTER\",\n        payload: {\n          showRegister: bol,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterScreen);\n",["155","156"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/PostScreen.js",["157","158","159"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport Post from \"../components/Post\";\nimport Comment from \"../components/Comment\";\nimport { getPostById } from \"../models/postHandler\";\nimport { getAllCommentsByPostId } from \"../models/commentHandler\";\nimport { connect } from \"react-redux\";\n\nfunction PostScreen(props) {\n  let { id } = useParams();\n\n  const [post, setpost] = useState(props.state.post);\n  const [comments, setcomments] = useState(props.state.comments);\n  const history = useHistory();\n\n  useEffect(() => {\n    props.toggleScreen(\"post\");\n    getPostById(id)\n      .then((post) => {\n        setpost(post.data);\n        getAllCommentsByPostId(null, id).then((comments) => {\n          props.setCommentsData(comments.data);\n        });\n      })\n      .catch((err) => {\n        history.push(\"/\");\n      });\n  }, [id]);\n\n  function getComments(id) {\n    getAllCommentsByPostId(null, props.state.post.id).then((comments) => {\n      props.setCommentsData(comments.data);\n    });\n    getPostById(id).then((post) => {\n      setpost(post.data);\n    });\n  }\n\n  return !post ? null : (\n    <section className=\"postScreen\">\n      <h1>{post.title}</h1>\n      <Post post={post} />\n      <div className=\"comment-list\">\n        {!props.state.comments\n          ? null\n          : props.state.comments.map((comment) => {\n              return (\n                <Comment\n                  key={comment.id}\n                  uploadComment={getComments}\n                  comment={comment}\n                />\n              );\n            })}\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPostData: (post) =>\n      dispatch({\n        type: \"UPLOAD_POST_FROM_API\",\n        payload: {\n          post: post,\n        },\n      }),\n    setCommentsData: (comments) =>\n      dispatch({\n        type: \"UPLOAD_COMMENTS_FROM_API\",\n        payload: {\n          comments: comments,\n        },\n      }),\n    toggleScreen: (screen) =>\n      dispatch({\n        type: \"CHANGE_SCREEN\",\n        payload: {\n          screen: screen,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostScreen);\n",["160","161"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/Topbar.js",["162","163"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/BannerPosts.js",["164"],"import React, { useEffect, useState } from \"react\";\nimport PostBanner from \"./PostBanner\";\nimport { getLastsPosts } from \"../models/postHandler\";\nimport { connect } from \"react-redux\";\n\nfunction BannerPosts(props) {\n  const [posts, setposts] = useState(null);\n\n  useEffect(() => {\n    document.querySelectorAll('.post_banner').forEach(ele=>{\n      ele.addEventListener('click', ()=>{\n        document.querySelector('.bannerPosts').classList.contains('shown')  ?\n        document.querySelector('.bannerPosts').classList.remove('shown')  :\n        document.querySelector('.bannerPosts').classList.add('shown')  \n      })\n    })\n    getLastsPosts().then((posts) => {\n      console.log(posts);\n      props.setLastsPostsData(posts.data);\n      setposts(posts.data);\n    });\n    return () => {\n      document.querySelectorAll('.leftasideDesktop ul li').forEach(ele=>{\n          ele.removeEventListener('click',null)\n      })\n    }\n  }, [props.state.screen]);\n\n  return (\n    <section className=\"bannerPosts\">\n      <h2>Les derniers articles </h2>\n      <section className=\"posts\">\n        {!posts\n          ? null\n          : posts.map((post, i) => {\n              return <PostBanner class=\"post_banner\" key={post.id} post={post} />;\n            })}\n      </section>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setLastsPostsData: (posts) =>\n      dispatch({\n        type: \"UPLOAD_LASTS_POSTS_FROM_API\",\n        payload: {\n          lastposts: posts,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerPosts);\n","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/models/commentHandler.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/Post.js",["165"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport \"moment/locale/fr\";\nimport PostSetting from \"./PostSetting\";\nimport AddComment from \"./AddComment\";\nimport { likeAPost } from \"../models/postHandler\";\nimport { connect } from \"react-redux\";\n\nfunction Post(props) {\n  const [showSetting, setshowSetting] = useState(false);\n  const [commentshow, setcommentshow] = useState(false);\n  const [likes, setlikes] = useState(props.post.likeList.length);\n  const [liked, setliked] = useState(false);\n  const post = props.post;\n\n  function likePost(event) {\n    event.preventDefault();\n    let data = {\n      userId: props.user.id,\n    };\n    let tolike = liked ? 0 : 1;\n\n    likeAPost(null, parseInt(post.id), parseInt(tolike), data)\n      .then((res) => {\n        if (res.data.res === \"add\") {\n          setliked(true);\n          setlikes(likes + 1);\n        }\n        if (res.data.res === \"remove\") {\n          setliked(false);\n          setlikes(likes - 1);\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // get likes from likepost table\n\n  useEffect(() => {\n    console.log(props);\n    if (props.post.likeList.length === 0) {\n      setliked(false);\n    } else {\n      props.post.likeList.forEach((like) => {\n        if (like.UserId === props.user.id) {\n          setliked(true);\n        } else {\n          setliked(false);\n        }\n      });\n    }\n  }, []);\n\n  //recuperer 'id de l'utilisateur depuis les props ou le la memoire\n  let authorRoles = props.user.roles;\n\n  // verifier si on est l'auteur du poste ou un admin\n  const author =\n    props.user.id === post.UserId || authorRoles.indexOf(\"ROLE_ADMIN\");\n\n  const setShow = () => setcommentshow(!commentshow);\n  // formater la date et heure en locale français\n  moment.locale(\"fr\");\n\n  console.log(liked);\n\n  return (\n    <article\n      className={!props.single ? \"post\" : \"post post-single\"}\n      data-id={post.id}\n    >\n      {!props.single ? null : (\n        <div className=\"post-close\" onClick={props.close}>\n          Fermer <span className=\"fa fa-close fa-2x\"></span>\n        </div>\n      )}\n      <div className=\"post_header\">\n        <h2 className=\"post_footer-author\">\n          <img src={post.avatar} alt=\"avatar\" width=\"30\" />\n          {post.userPseudo}\n        </h2>\n        {/* <h3>{props.post.title}</h3> */}\n        {author !== -1 && (\n          <span\n            className=\"fa fa-edit\"\n            onClick={() => setshowSetting(!showSetting)}\n          ></span>\n        )}\n      </div>\n      <Link className=\"post_image\" to={\"/post/\" + post.id}>\n        {post.type === \"video\" ? (\n          <video\n            poster=\"/bin/092020/poster-small-child-gets-caught-taking-selfie.gif\"\n            preload=\"auto\"\n            autoPlay=\"autoplay\"\n            muted=\"muted\"\n            loop=\"loop\"\n            id=\"gif\"\n          >\n            <source src={post.image} />\n          </video>\n        ) : (\n          <img className=\"freezeframe\" src={post.image} alt=\"gif\" />\n        )}\n      </Link>\n      <Link\n        to={\"/post/\" + post.id}\n        className={\n          post.description ? \"post_description\" : \"post_description vide\"\n        }\n      >\n        {post.description}\n      </Link>\n      <div className=\"post_footer\">\n        <span className=\"date\">{moment(props.post.createdAt).fromNow()}</span>\n        <span>\n          <span\n            className={liked ? \"fa fa-heart\" : \"far fa-heart\"}\n            onClick={likePost}\n          ></span>{\" \"}\n          {likes}\n        </span>\n        <span onClick={setShow}>\n          <span className=\"fa fa-comment-alt\"></span> {post.comments || 0}\n        </span>\n      </div>\n      <AddComment\n        show={commentshow}\n        showcommenthandler={setShow}\n        postId={post.id}\n        userId={props.user.userId}\n      />\n      {/* une sorte de modale pour afficher le boutton de supprition du poste */}\n      <PostSetting id={props.post.id} show={showSetting} />\n    </article>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  state: state,\n});\n\nexport default connect(mapStateToProps)(Post);\n",["166","167"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/AddComment.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/models/userHandler.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/store/reducers.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/UsersList.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/ProfileScreen.js",["168"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getAllPostsWithId } from \"../models/postHandler\";\nimport { deleteUser } from \"../models/userHandler\";\n\nfunction ProfileScreen(props) {\n  const [postsCount, setpostsCount] = useState(0);\n\n  function deleteProfile() {\n    let confirmation = window.confirm(\n      \"Êtes-vous sur de vouloir supprimer votre compte ?\"\n    );\n    if (confirmation) {\n      deleteUser(props.state.user.id).then((res) => {\n        if (res.status === 200) {\n          localStorage.clear();\n          window.location.href = \"/\";\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    getAllPostsWithId(null, props.state.user.id)\n      .then((posts) => {\n        setpostsCount(posts.data.length);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <section className=\"profile\">\n      <div className=\"profile-header\">\n        <img src={props.state.user.avatar} alt=\"avatar\" />\n        <span>\n          Email: <strong>{props.state.user.email}</strong>\n        </span>\n        <span>\n          Nom prénom:{\" \"}\n          <strong>\n            {props.state.user.firstName}, {props.state.user.lastName}\n          </strong>\n        </span>\n        <span>\n          Roles: <strong>{props.state.user.roles}</strong>\n        </span>\n        <span>\n        Publications en ligne : <strong>{postsCount}</strong>\n        </span>\n      </div>\n      <div className=\"profile-action\">\n        <button className=\"delete\" onClick={deleteProfile}>\n          {\" \"}\n          Suprimer mon compte : <span className=\"fa fa-trash\"></span>\n        </button>\n        <Link to=\"edit-profile\" className=\"button edit-button\">\n          {\" \"}\n          Modifier mes données : <span className=\"fa fa-edit\"></span>\n        </Link>\n      </div>\n      <div className=\"profile-body\"></div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\n\nexport default connect(mapStateToProps)(ProfileScreen);\n",["169","170"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/HomeScreen.js",["171"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/UserProfileScreen.js",[],["172","173"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/LogScreen.js",["174"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport logo from \"../assets/images/logos/icon-left-font-monochrome-black.svg\";\nimport { getAllUsers, logUser } from \"../models/userHandler\";\n\nfunction LogScreen(props) {\n  const [disabled, setdisabled] = useState(false);\n  const [error, seterror] = useState(null);\n  const [passwordclear, setpasswordclear] = useState(false);\n  const [credentiels, setcredentiels] = useState({\n    email: null,\n    password: null,\n  });\n\n  /**\n   * login the user and set update state with the user data\n   */\n  function login(event) {\n    event.preventDefault();\n    props.toggleLoading(true);\n    logUser(credentiels)\n      .then((data) => {\n        if (data.data.err) {\n          seterror(\"Votre email ou mot de passe est incorrect !\");\n        } else {\n          localStorage.setItem(\"token\", data.data.token);\n          getAllUsers(data.data.token).then((users) => {\n            props.setUsers(users.data.users);\n          });\n          seterror(null);\n          props.setUserData(data.data.user);\n          props.setLoggin(true);\n          props.toggleLoading(false);\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function changeCredentiels(e) {\n    setcredentiels({ ...credentiels, [e.target.name]: e.target.value });\n    if (credentiels.email != null && credentiels.password != null) {\n      setdisabled(false);\n    }\n  }\n\n  return (\n    <section className=\"logscreen\">\n      <div className=\"logo\">\n        <img className=\"img-fluid\" src={logo} alt=\"groupomania\" />\n      </div>\n      <p className=\"small\">\n        Connetez-vous pour pouvoir poster des medias, liker et commenter les\n        postes de vos colègues.\n      </p>\n      {!error ? null : <div className=\"warning\">{error}</div>}\n\n      <form onSubmit={login}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email :</label>\n          <input\n            onChange={changeCredentiels}\n            name=\"email\"\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Mot de passe :</label>\n          <div className=\"input-group\">\n            <input\n              onChange={changeCredentiels}\n              name=\"password\"\n              type={passwordclear? \"text\" : \"password\"}\n              className=\"form-control\"\n              id=\"password\"\n              />\n            <span \n              className={passwordclear ? \"fa fa-eye-slash\" : \"fa fa-eye\"} \n              onClick={()=>setpasswordclear(!passwordclear)}>\n                \n              </span>\n            </div>\n        </div>\n        <div className=\"form-group form-check\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"exampleCheck1\"\n          />\n          <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n            Garder ma session\n          </label>\n        </div>\n        <button type=\"submit\" className=\"p-2\">\n          Se connecter\n        </button>\n      </form>\n      <div className=\"helpers d-flex flex-column\">\n        <button className=\"mt-5\">Mot de passe oublié</button>\n        <button className=\"mt-1\" onClick={() => props.goToRegister(true)}>\n          {\" \"}\n          Créer un compte\n        </button>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUserData: (data) =>\n      dispatch({\n        type: \"LOGIN_USER\",\n        payload: {\n          user: data,\n        },\n      }),\n    setLoggin: () =>\n      dispatch({\n        type: \"SET_LOGGIN\",\n        payload: {\n          loggin: true,\n        },\n      }),\n    goToRegister: (bol) =>\n      dispatch({\n        type: \"GOTO_REGISTER\",\n        payload: {\n          showRegister: bol,\n        },\n      }),\n    toggleLoading: (bool) =>\n      dispatch({\n        type: \"TOGGLE_LOADING\",\n        payload: {\n          loading: false,\n        },\n      }),\n      setUsers: (users) => {\n        dispatch({\n          type: \"SET_USERS_LIST\",\n          payload: { users },\n        });\n      },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogScreen);\n","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/Comment.js",["175"],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/MesPostsScreen.js",["176","177","178","179"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Post from \"../components/Post\";\nimport { getAllPostsWithId } from \"../models/postHandler\";\n\nfunction MesPostsScreen(props) {\n  let userId = props.state.user.id;\n\n  useEffect(() => {\n    getAllPostsWithId(null, userId)\n      .then((posts) => {\n        console.log(posts.data)\n        props.setMesPostsData(posts.data);\n        console.log(\"MES POSTS:\", posts.data);\n      })\n      .catch((err) => console.log(err));\n  },[userId]);\n\n\n\n  return (\n    <section className=\"home\">\n      {!props.state.posts ? null : props.state.posts.length == 0 ? (\n        <div className=\"alert alert-success mt-5\">\n          Vous n'avez aucune publications pour l'instant !\n        </div>\n      ) : (\n        props.state.posts.map((post, i) => {\n          return <Post key={post.id} post={post} />;\n        })\n      )}\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMesPostsData: (posts) =>\n      dispatch({\n        type: \"UPLOAD_POSTS_FROM_API\",\n        payload: {\n          posts: posts,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MesPostsScreen);\n","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/AddPost.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/LeftAsideDesktop.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/models/postHandler.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/serviceWorkerRegistration.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/store/store.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/LeftAside.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/PostSetting.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/reportWebVitals.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/BottomNav.js",["180","181"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction BottomNav(props) {\n  function navigate(e) {\n    props.toggleSideBarre(!props.state.showSideBarre);\n    props.toggleScreen(e.target.dataset.link);\n    let path = window.location.pathname;\n    if (path.match(/\\/post\\/\\d/)) {\n      path = \"/\";\n    }\n  }\n\n  useEffect(() => {\n    document.querySelector('#menu').addEventListener('click', ()=>{\n        document.querySelector('.leftasideDesktop').classList.contains('shown')  ?\n        document.querySelector('.leftasideDesktop').classList.remove('shown')  :\n        document.querySelector('.leftasideDesktop').classList.add('shown')  \n    })\n\n    document.querySelector('#lastPosts').addEventListener('click', ()=>{\n      document.querySelector('.bannerPosts').classList.contains('shown')  ?\n      document.querySelector('.bannerPosts').classList.remove('shown')  :\n      document.querySelector('.bannerPosts').classList.add('shown')  \n  })\n\n    let path = window.location.pathname;\n    if (path.match(/\\/post\\/\\d/)) {\n      path = \"/\";\n    }\n    switch (path) {\n      case \"/\":\n        props.toggleScreen(\"home\");\n        break;\n      case \"/profile\":\n        props.toggleScreen(\"profile\");\n        break;\n      case \"/ajouter\":\n        props.toggleScreen(\"plus\");\n        break;\n    }\n  }, []);\n\n  return (\n    <ul className=\"bottomnav\">\n      <li id=\"menu\">\n          <span\n            className=\"fa fa-bars\"\n          ></span>\n      </li>\n      <li>\n        <Link\n          className={\n            props.state.screen !== \"home\"\n              ? \"bottomnav_home\"\n              : \"bottomnav_home active\"\n          }\n          to=\"/\"\n        >\n          <span\n            data-link=\"home\"\n            onClick={navigate}\n            className=\"fa fa-home\"\n          ></span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          className={\n            props.state.screen !== \"plus\"\n              ? \"bottomnav_home\"\n              : \"bottomnav_home active\"\n          }\n          to=\"/ajouter\"\n        >\n          <span\n            data-link=\"plus\"\n            onClick={navigate}\n            className=\"fa fa-plus-circle\"\n          ></span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          className={\n            props.state.screen !== \"profile\"\n              ? \"bottomnav_home\"\n              : \"bottomnav_home active\"\n          }\n          to=\"/profile\"\n        >\n          <span\n            data-link=\"profile\"\n            onClick={navigate}\n            className=\"fa fa-user\"\n          ></span>\n        </Link>\n      </li>\n      <li id=\"lastPosts\">\n          <span\n            className=\"fa fa-file\"\n          ></span>\n      </li>\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleSideBarre: (show) =>\n      dispatch({\n        type: \"SHOW_SIDE_BARRE\",\n        payload: {\n          showSideBarre: !show,\n        },\n      }),\n    toggleScreen: (screen) =>\n      dispatch({\n        type: \"CHANGE_SCREEN\",\n        payload: {\n          screen: screen,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomNav);\n","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/EditScreen.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/screens/EditPasswordScreen.js",["182"],"import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editUser } from \"../models/userHandler\";\n\nfunction EditPasswordScreen(props) {\n  const [imageFile, setimageFile] = useState(null);\n  const [data, setdata] = useState({\n    firstName: props.state.user.firstName,\n    lastName: props.state.user.firstName,\n  });\n  const [error, seterror] = useState(null);\n  const [update, setupdate] = useState(false);\n\n  function submitPostForm(e) {\n    e.preventDefault();\n    editUser(update, data, imageFile)\n      .then((res) => {\n        if (res.status === 201) {\n          window.location.href = \"/profile\";\n        } else if (res.error) {\n          seterror(res.error);\n        }\n      })\n      .catch((err) => console.log(\"error:\", err));\n  }\n\n  function saveData(e) {\n    setdata({ ...data, [e.target.name]: e.target.value });\n    setupdate(true);\n  }\n\n  return (\n    <section className=\"editScreen\">\n      {!error ? null : <div className=\"warning\">{error}</div>}\n      <form onSubmit={submitPostForm} encType=\"multipart/form-data\">\n        <div className=\"form-group\">\n          <label htmlFor=\"password-last\">Ancien mot de passe</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"password-last\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Nouveau mot de passe</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password-confirm\">Confirmer le mot de passe</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"password-confirm\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Mettre a jour mon compte\n        </button>\n      </form>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\n\nexport default connect(mapStateToProps)(EditPasswordScreen);\n","/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/helpers/config.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/index.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/PostBanner.js",[],"/home/abdelhak/web-projets/abdelhakhamdouni_07_03082020-03/frontend/src/components/Loader.js",[],{"ruleId":"183","severity":1,"message":"184","line":49,"column":6,"nodeType":"185","endLine":49,"endColumn":8,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":51,"column":9,"nodeType":"189","messageId":"190","endLine":51,"endColumn":25},{"ruleId":"187","severity":1,"message":"191","line":55,"column":9,"nodeType":"189","messageId":"190","endLine":55,"endColumn":21},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"187","severity":1,"message":"196","line":8,"column":10,"nodeType":"189","messageId":"190","endLine":8,"endColumn":15},{"ruleId":"187","severity":1,"message":"197","line":9,"column":10,"nodeType":"189","messageId":"190","endLine":9,"endColumn":13},{"ruleId":"187","severity":1,"message":"198","line":12,"column":10,"nodeType":"189","messageId":"190","endLine":12,"endColumn":18},{"ruleId":"187","severity":1,"message":"199","line":14,"column":9,"nodeType":"189","messageId":"190","endLine":14,"endColumn":16},{"ruleId":"192","replacedBy":"200"},{"ruleId":"194","replacedBy":"201"},{"ruleId":"187","severity":1,"message":"202","line":13,"column":10,"nodeType":"189","messageId":"190","endLine":13,"endColumn":18},{"ruleId":"187","severity":1,"message":"203","line":13,"column":20,"nodeType":"189","messageId":"190","endLine":13,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":28,"column":6,"nodeType":"185","endLine":28,"endColumn":10,"suggestions":"204"},{"ruleId":"192","replacedBy":"205"},{"ruleId":"194","replacedBy":"206"},{"ruleId":"187","severity":1,"message":"207","line":6,"column":10,"nodeType":"189","messageId":"190","endLine":6,"endColumn":15},{"ruleId":"187","severity":1,"message":"208","line":19,"column":12,"nodeType":"189","messageId":"190","endLine":19,"endColumn":23},{"ruleId":"183","severity":1,"message":"209","line":27,"column":6,"nodeType":"185","endLine":27,"endColumn":26,"suggestions":"210"},{"ruleId":"183","severity":1,"message":"211","line":53,"column":6,"nodeType":"185","endLine":53,"endColumn":8,"suggestions":"212"},{"ruleId":"192","replacedBy":"213"},{"ruleId":"194","replacedBy":"214"},{"ruleId":"183","severity":1,"message":"215","line":30,"column":6,"nodeType":"185","endLine":30,"endColumn":8,"suggestions":"216"},{"ruleId":"192","replacedBy":"217"},{"ruleId":"194","replacedBy":"218"},{"ruleId":"183","severity":1,"message":"209","line":12,"column":6,"nodeType":"185","endLine":12,"endColumn":26,"suggestions":"219"},{"ruleId":"192","replacedBy":"220"},{"ruleId":"194","replacedBy":"221"},{"ruleId":"187","severity":1,"message":"198","line":7,"column":10,"nodeType":"189","messageId":"190","endLine":7,"endColumn":18},{"ruleId":"183","severity":1,"message":"222","line":31,"column":6,"nodeType":"185","endLine":31,"endColumn":8,"suggestions":"223"},{"ruleId":"187","severity":1,"message":"224","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"225","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":19},{"ruleId":"183","severity":1,"message":"209","line":18,"column":5,"nodeType":"185","endLine":18,"endColumn":13,"suggestions":"226"},{"ruleId":"227","severity":1,"message":"228","line":24,"column":61,"nodeType":"229","messageId":"230","endLine":24,"endColumn":63},{"ruleId":"231","severity":1,"message":"232","line":32,"column":5,"nodeType":"233","messageId":"234","endLine":42,"endColumn":6},{"ruleId":"183","severity":1,"message":"209","line":43,"column":6,"nodeType":"185","endLine":43,"endColumn":8,"suggestions":"235"},{"ruleId":"187","severity":1,"message":"236","line":6,"column":21,"nodeType":"189","messageId":"190","endLine":6,"endColumn":33},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["237"],"no-unused-vars","'showAsideHandler' is assigned a value but never used.","Identifier","unusedVar","'showRegister' is assigned a value but never used.","no-native-reassign",["238"],"no-negated-in-lhs",["239"],"'image' is assigned a value but never used.","'alt' is assigned a value but never used.","'disabled' is assigned a value but never used.","'history' is assigned a value but never used.",["238"],["239"],"'comments' is assigned a value but never used.","'setcomments' is assigned a value but never used.",["240"],["238"],["239"],"'arrow' is assigned a value but never used.","'gotoProfile' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["241"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["242"],["238"],["239"],"React Hook useEffect has a missing dependency: 'props.state.user.id'. Either include it or remove the dependency array.",["243"],["238"],["239"],["244"],["238"],["239"],"React Hook useEffect has a missing dependency: 'props.comment.UserId'. Either include it or remove the dependency array.",["245"],"'useState' is defined but never used.","'useParams' is defined but never used.",["246"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["247"],"'setimageFile' is assigned a value but never used.",{"desc":"248","fix":"249"},"no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"252","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"254","fix":"263"},"Update the dependencies array to be: [history, props]",{"range":"264","text":"265"},"Update the dependencies array to be: [history, id, props]",{"range":"266","text":"267"},"Update the dependencies array to be: [props, props.state.screen]",{"range":"268","text":"269"},"Update the dependencies array to be: [props]",{"range":"270","text":"271"},"Update the dependencies array to be: [props.state.user.id]",{"range":"272","text":"273"},{"range":"274","text":"269"},"Update the dependencies array to be: [props.comment.UserId]",{"range":"275","text":"276"},"Update the dependencies array to be: [props, userId]",{"range":"277","text":"278"},{"range":"279","text":"271"},[1839,1841],"[history, props]",[882,886],"[history, id, props]",[930,950],"[props, props.state.screen]",[1446,1448],"[props]",[865,867],"[props.state.user.id]",[311,331],[918,920],"[props.comment.UserId]",[563,571],"[props, userId]",[1370,1372]]