{"version":3,"sources":["assets/images/logos/icon-left-font-monochrome-black.svg","helpers/config.js","models/userHandler.js","screens/LogScreen.js","screens/RegisterScreen.js","models/postHandler.js","components/PostSetting.js","models/commentHandler.js","components/AddComment.js","components/Post.js","screens/HomeScreen.js","screens/AddPost.js","screens/ProfileScreen.js","components/Comment.js","screens/PostScreen.js","screens/MesPostsScreen.js","components/Topbar.js","components/BottomNav.js","components/Loader.js","components/LeftAsideDesktop.js","components/PostBanner.js","components/BannerPosts.js","components/UsersList.js","screens/UserProfileScreen.js","screens/EditScreen.js","screens/EditPasswordScreen.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","store/reducers.js","store/store.js","index.js"],"names":["config","url","deleteUser","userId","token","localStorage","getItem","axios","delete","timeout","headers","Authorization","editUser","update","data","file","lastImage","id","Promise","resole","error","formData","FormData","append","JSON","stringify","put","getUserById","get","getAllUsers","token_","connect","state","dispatch","setUserData","type","payload","user","setLoggin","loggin","goToRegister","bol","showRegister","toggleLoading","bool","loading","setUsers","users","props","useState","setdisabled","seterror","passwordclear","setpasswordclear","email","password","credentiels","setcredentiels","changeCredentiels","e","target","name","value","className","src","logo","alt","onSubmit","event","preventDefault","post","logUser","then","err","setItem","catch","console","log","htmlFor","onChange","aria-describedby","onClick","setimage","setalt","imageFile","setimageFile","setdata","useHistory","saveData","resetForm","document","querySelectorAll","useEffect","method","addUser","res","status","window","location","href","encType","required","onBlur","checkEmailFormBdd","evt","files","length","match","FileReader","fr","onload","result","readAsDataURL","getAllPosts","getAllPostsWithId","getPostById","setPostsData","posts","history","show","data-id","confirm","deletePost","push","getAllCommentsByPostId","setPostData","setCommentsData","comments","comment","content","querySelector","postId","commentId","addComment","showcommenthandler","placeholder","rows","showSetting","setshowSetting","commentshow","setcommentshow","likeList","likes","setlikes","liked","setliked","forEach","like","UserId","authorRoles","roles","author","indexOf","setShow","moment","locale","single","close","avatar","width","userPseudo","to","poster","preload","autoPlay","muted","loop","image","description","createdAt","fromNow","tolike","likeAPost","parseInt","screen","map","i","toggleScreen","parse","disabled","undefined","title","authorId","pseudo","lastName","addPost","postsCount","setpostsCount","firstName","clear","setuser","CommentId","deleteComment","PostId","useParams","setpost","getComments","uploadComment","setMesPostsData","toggleSideBarre","showSideBarre","setarrow","pathname","substr","style","fontSize","navigate","dataset","link","path","addEventListener","classList","contains","remove","add","data-link","Loader","xmlns","viewBox","cx","cy","r","stroke","ele","removeEventListener","Post","setLastsPostsData","lastposts","setposts","getLastsPosts","PostBanner","class","getCountAllPostsWithUserId","count","includes","setupdate","logged","logWithToken","removeItem","LeftAsideDesktop","exact","EditScreen","UserProfileScreen","Boolean","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","showLogin","showCommentForm","mesposts","reducers","action","mespost","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ad9143c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-left-font-monochrome-black.19aa0a7c.svg\";","const config = {\n  url: `https://groupomania-back.herokuapp.com/api/`,\n};\n\nexport default config;\n","import config from \"../helpers/config\";\nimport axios from \"axios\";\n\nfunction logWithToken(token) {\n  console.log(\"LOGIN with TOKEN\", token);\n  return axios.get(config.url + \"auth\", {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction deleteUser(userId) {\n  let token = localStorage.getItem(\"token\");\n  return axios.delete(config.url + \"auth/\" + userId, {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\n/**\n * @param {Object} credentiels = {email, password}\n */\nfunction logUser(credentiels) {\n  return axios.post(config.url + \"auth/login\", credentiels);\n}\n\nfunction addUser(data, file) {\n  let formData = new FormData();\n  formData.append(\"user\", JSON.stringify(data));\n  if (file !== null) {\n    formData.append(\"image\", file[0] || null);\n  }\n  return axios.post(config.url + \"auth/signup\", formData, {\n    method: \"post\",\n  });\n}\n\nfunction editUser(update, data, file, lastImage, id) {\n  if (!update && file === null) {\n    return new Promise((resole) => {\n      resole({\n        error:\n          \"Vous n'avez pas changé vos information, si vous ne voulez pas modifier vos données allez à la page d'acceuil.\",\n      });\n    });\n  }\n\n  let formData = new FormData();\n  formData.append(\"lastImage\", lastImage);\n  formData.append(\"user\", JSON.stringify(data));\n\n  if (file !== null) {\n    formData.append(\"image\", file[0] || null);\n  }\n  return axios.put(config.url + \"auth/\" + id, formData, {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") },\n  });\n}\n\nfunction checkUserPseudo(pseudo) {\n  return axios.post(config.url + \"auth/user/check/pseudo\", {\n    pseudo,\n  });\n}\n\nfunction checkEmailFormBdd(email) {\n  return axios.post(config.url + \"auth/user/check/email\", {\n    email,\n  });\n}\n\nfunction getUserById(id) {\n  let token = localStorage.getItem(\"token\");\n  return axios.get(config.url + \"auth/\" + id, {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction getAllUsers(token_ = null) {\n  let token = token_ || localStorage.getItem(\"token\");\n  return axios.get(config.url + \"auth/users\", {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nexport {\n  logWithToken,\n  deleteUser,\n  logUser,\n  addUser,\n  editUser,\n  checkUserPseudo,\n  getUserById,\n  getAllUsers,\n  checkEmailFormBdd\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport logo from \"../assets/images/logos/icon-left-font-monochrome-black.svg\";\nimport { getAllUsers, logUser } from \"../models/userHandler\";\n\nfunction LogScreen(props) {\n  const [disabled, setdisabled] = useState(false);\n  const [error, seterror] = useState(null);\n  const [passwordclear, setpasswordclear] = useState(false);\n  const [credentiels, setcredentiels] = useState({\n    email: null,\n    password: null,\n  });\n\n  /**\n   * login the user and set update state with the user data\n   */\n  function login(event) {\n    event.preventDefault();\n    props.toggleLoading(true);\n    logUser(credentiels)\n      .then((data) => {\n        if (data.data.err) {\n          seterror(\"Votre email ou mot de passe est incorrect !\");\n        } else {\n          localStorage.setItem(\"token\", data.data.token);\n          getAllUsers(data.data.token).then((users) => {\n            props.setUsers(users.data.users);\n          });\n          seterror(null);\n          props.setUserData(data.data.user);\n          props.setLoggin(true);\n          props.toggleLoading(false);\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function changeCredentiels(e) {\n    setcredentiels({ ...credentiels, [e.target.name]: e.target.value });\n    if (credentiels.email != null && credentiels.password != null) {\n      setdisabled(false);\n    }\n  }\n\n  return (\n    <section className=\"logscreen\">\n      <div className=\"logo\">\n        <img className=\"img-fluid\" src={logo} alt=\"groupomania\" />\n      </div>\n      <p className=\"small\">\n        Connetez-vous pour pouvoir poster des medias, liker et commenter les\n        postes de vos colègues.\n      </p>\n      {!error ? null : <div className=\"warning\">{error}</div>}\n\n      <form onSubmit={login}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email :</label>\n          <input\n            onChange={changeCredentiels}\n            name=\"email\"\n            type=\"email\"\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Mot de passe :</label>\n          <div className=\"input-group\">\n            <input\n              onChange={changeCredentiels}\n              name=\"password\"\n              type={passwordclear? \"text\" : \"password\"}\n              className=\"form-control\"\n              id=\"password\"\n              />\n            <span \n              className={passwordclear ? \"fa fa-eye-slash\" : \"fa fa-eye\"} \n              onClick={()=>setpasswordclear(!passwordclear)}>\n                \n              </span>\n            </div>\n        </div>\n        <div className=\"form-group form-check\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"exampleCheck1\"\n          />\n          <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n            Garder ma session\n          </label>\n        </div>\n        <button type=\"submit\" className=\"p-2\">\n          Se connecter\n        </button>\n      </form>\n      <div className=\"helpers d-flex flex-column\">\n        <button className=\"mt-5\">Mot de passe oublié</button>\n        <button className=\"mt-1\" onClick={() => props.goToRegister(true)}>\n          {\" \"}\n          Créer un compte\n        </button>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUserData: (data) =>\n      dispatch({\n        type: \"LOGIN_USER\",\n        payload: {\n          user: data,\n        },\n      }),\n    setLoggin: () =>\n      dispatch({\n        type: \"SET_LOGGIN\",\n        payload: {\n          loggin: true,\n        },\n      }),\n    goToRegister: (bol) =>\n      dispatch({\n        type: \"GOTO_REGISTER\",\n        payload: {\n          showRegister: bol,\n        },\n      }),\n    toggleLoading: (bool) =>\n      dispatch({\n        type: \"TOGGLE_LOADING\",\n        payload: {\n          loading: false,\n        },\n      }),\n      setUsers: (users) => {\n        dispatch({\n          type: \"SET_USERS_LIST\",\n          payload: { users },\n        });\n      },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogScreen);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"../assets/images/logos/icon-left-font-monochrome-black.svg\";\nimport { addUser,checkEmailFormBdd } from \"../models/userHandler\";\n\nfunction RegisterScreen(props) {\n  const [image, setimage] = useState(null);\n  const [alt, setalt] = useState(null);\n  const [imageFile, setimageFile] = useState(null);\n  const [data, setdata] = useState();\n  const [disabled, setdisabled] = useState(true);\n  const [error, seterror] = useState(null);\n  const history = useHistory();\n  const [passwordclear, setpasswordclear] = useState(false);\n\n\n  function getImage(evt) {\n    var tgt = evt.target,\n      files = tgt.files;\n    console.log(files);\n    if (files.length > 0) {\n      if (!files[0].type.match(/^image/)) {\n        seterror(\"Le format du media n'est pas pris en compte !\");\n        return setdisabled(true);\n      } else {\n        setimageFile(files);\n        setalt(files[0].name);\n        setdisabled(false);\n        seterror(null);\n        setimage(\"\");\n      }\n    }\n\n    // FileReader support\n    if (FileReader && files && files.length) {\n      var fr = new FileReader();\n      fr.onload = function () {\n        setimage(fr.result);\n      };\n      fr.readAsDataURL(files[0]);\n    }\n    // Not supported\n    else {\n      // fallback -- perhaps submit the input to an iframe and temporarily store\n      // them on the server until the user's session ends.\n    }\n  }\n\n  useEffect(() => {\n    resetForm();\n  }, []);\n\n  function submitPostForm(e) {\n    e.preventDefault();\n    addUser(data, imageFile)\n      .then((res) => {\n        if (res.status === 201) {\n          resetForm();\n          window.location.href = \"/\";\n        }else{\n        seterror(res.data.error)\n        }\n      })\n      .catch((err) => console.log(\"error:\", err));\n  }\n\n  function saveData(e) {\n    setdata({ ...data, [e.target.name]: e.target.value });\n  }\n\n  function checkEmail(e){\n    let email = e.target.value\n    checkEmailFormBdd(email).then(res=>{\n      console.log(res)\n      if(res.data.error){\n        seterror(res.data.error)\n      }else{\n        seterror(null)\n      }\n    }).catch(err=>{\n      console.log(err)\n    })\n  }\n\n  function resetForm() {\n    setimage(null);\n    document.querySelectorAll(\"input\").value = \"\";\n    document.querySelectorAll(\"textarea\").value = \"\";\n  }\n\n  return props.showRegister ? null : (\n    <section className=\"logscreen register\">\n      <div className=\"logo\">\n        {\" \"}\n        <img src={logo} alt=\"groupomania\" />{\" \"}\n      </div>\n      <div>\n        {\" \"}\n        <h1>Créer votre compte</h1>{\" \"}\n      </div>\n      <form onSubmit={submitPostForm} encType=\"multipart/form-data\">\n      {!error ? null : <div className=\"warning\">{error}</div>}\n        <div className=\"form-group\">\n          <label htmlFor=\"firstName\">Nom: </label>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"firstName\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"lastName\">Prénom: </label>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"lastName\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"email\"\n            aria-describedby=\"emailHelp\"\n            required\n            onBlur={checkEmail}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Mot de passe :</label>\n          <div className=\"input-group\">\n            <input\n              onChange={saveData}\n              name=\"password\"\n              type={passwordclear? \"text\" : \"password\"}\n              className=\"form-control\"\n              id=\"password\"\n              />\n            <span \n              className={passwordclear ? \"fa fa-eye-slash\" : \"fa fa-eye\"} \n              onClick={()=>setpasswordclear(!passwordclear)}>\n                \n              </span>\n            </div>\n        </div>\n        <div className=\"form-group mt-3\">\n          <label htmlFor=\"file\">Choisir un Avatar</label>\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={getImage}\n            className=\"form-control\"\n            id=\"file\"\n          />\n        </div>\n        <div className=\"form-group form-check my-2\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id=\"exampleCheck1\"\n            required\n          />\n          <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n            Accpeter les conditions d'utilisation\n          </label>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Créer mon compte\n        </button>\n      </form>\n      <div className=\"helpers\">\n        {\" \"}\n        <button className=\"helpers_button mb-5\">Se connecter</button>{\" \"}\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUserData: (data) =>\n      dispatch({\n        type: \"LOGIN_USER\",\n        payload: {\n          user: data,\n        },\n      }),\n    goToRegister: (bol) =>\n      dispatch({\n        type: \"GOTO_REGISTER\",\n        payload: {\n          showRegister: bol,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterScreen);\n","import config from \"../helpers/config\";\nimport axios from \"axios\";\n/**\n *\n * @param {Object} credentiels = {email, password}\n */\nfunction addPost(data, file) {\n  let formData = new FormData();\n  formData.append(\"post\", JSON.stringify(data));\n  formData.append(\"image\", file[0]);\n\n  return axios.post(config.url + \"posts\", formData, {\n    method: \"post\",\n    headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") },\n  });\n}\n\nfunction getAllPosts(token = null) {\n  token = !token ? localStorage.getItem(\"token\") : token;\n  return axios.get(config.url + \"posts\", {\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction getLastsPosts(token = null) {\n  token = !token ? localStorage.getItem(\"token\") : token;\n  return axios.get(config.url + \"posts/lasts\", {\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction getAllPostsWithId(token = null, id) {\n  token = !token ? localStorage.getItem(\"token\") : token;\n  return axios.get(config.url + \"posts/user/\"+ id +\"/posts\", {\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction getCountAllPostsWithUserId(token = null, UserId) {\n  token = !token ? localStorage.getItem(\"token\") : token;\n  return axios.get(config.url + \"posts/user/\" + UserId, {\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction getPostById(id) {\n  let token = localStorage.getItem(\"token\");\n  return axios.get(config.url + \"posts/post/\" + id, {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction deletePost(id) {\n  let token = localStorage.getItem(\"token\");\n  return axios.delete(config.url + \"posts/\" + id, {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction getAllLikesById(token = null, postId) {\n  if (!token) token = localStorage.getItem(\"token\");\n  return axios.post(config.url + \"likes/\" + postId, null, {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nfunction likeAPost(token = null, id, like, data) {\n  if (!token) token = localStorage.getItem(\"token\");\n  return axios.post(config.url + \"likes/\" + id + \"/\" + like, data, {\n    timeout: 1000,\n    headers: { Authorization: \"Bearer \" + token },\n  });\n}\n\nexport {\n  addPost,\n  getAllPosts,\n  getAllPostsWithId,\n  getCountAllPostsWithUserId,\n  getPostById,\n  deletePost,\n  likeAPost,\n  getAllLikesById,\n  getLastsPosts,\n};\n","import React from \"react\";\nimport { deletePost, getAllPosts } from \"../models/postHandler\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction PostSetting(props) {\n  const history = useHistory();\n\n  function deletethisposte() {\n    let confirm = window.confirm(\n      \"Êtes-vous sur de vouloir suprimer ce poste ?\"\n    );\n    if (confirm) {\n      deletePost(props.id).then(() => {\n        getAllPosts().then((posts) => {\n          props.setPostsData(posts.data);\n          history.push(\"/\");\n        });\n      });\n    }\n  }\n\n  return !props.show ? null : (\n    <ul className=\"postSetting\">\n      <li className=\"delete\" data-id={props.id} onClick={deletethisposte}>\n        <span className=\"fa fa-trash\"></span> Suprmier ce poste\n      </li>\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPostsData: (posts) =>\n      dispatch({\n        type: \"UPLOAD_POSTS_FROM_API\",\n        payload: {\n          posts: posts,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostSetting);\n","import config from \"../helpers/config\";\nimport axios from \"axios\";\n\nfunction addComment(data, token = null) {\n  let token_ = token || localStorage.getItem(\"token\");\n  return axios.post(config.url + \"comments/\", data, {\n    headers: { Authorization: \"Bearer \" + token_ },\n  });\n}\n\nfunction getAllCommentsByPostId(token, id) {\n  let token_ = token || localStorage.getItem(\"token\");\n  return axios.get(config.url + \"comments/\" + id, {\n    headers: { Authorization: \"Bearer \" + token_ },\n  });\n}\n\nfunction getCountCommentsByPostId(token, id) {\n  let token_ = token || localStorage.getItem(\"token\");\n  return axios.get(config.url + \"comments/count/\" + id, {\n    headers: { Authorization: \"Bearer \" + token_ },\n  });\n}\n\nfunction deleteComment(token, id) {\n  let token_ = token || localStorage.getItem(\"token\");\n  return axios.delete(config.url + \"comments/\" + id, {\n    headers: { Authorization: \"Bearer \" + token_ },\n  });\n}\n\nexport {\n  addComment,\n  getAllCommentsByPostId,\n  getCountCommentsByPostId,\n  deleteComment,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addComment, getAllCommentsByPostId } from \"../models/commentHandler\";\nimport { getPostById } from \"../models/postHandler\";\n\nfunction AddComment(props) {\n\n  let comment = {};\n  function submitComment(e) {\n    e.preventDefault();\n    comment.content = document.querySelector(\"form textarea\").value;\n    comment.userId = props.userId;\n    comment.postId = props.postId;\n    comment.commentId = props.commentId | null;\n\n    if (comment.content.length < 1) {\n      return false;\n    }\n    addComment(comment).then((comment) => {\n      getAllCommentsByPostId(null, props.postId).then((comments) => {\n        getPostById(props.postId).then((post) => {\n          props.setCommentsData(comments.data);\n          props.showcommenthandler();\n          props.setPostData(post.data);\n        });\n      });\n    });\n  }\n\n  return !props.show ? null : (\n    <article className=\"addcomment\">\n      <form onSubmit={submitComment}>\n        <textarea\n          name=\"comment\"\n          placeholder=\"votre commentaire içi...\"\n          rows=\"3\"\n        ></textarea>\n        <button>Envoyer</button>\n      </form>\n    </article>\n  );\n}\n\nconst mapPropsToState = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPostData: (post) =>\n      dispatch({\n        type: \"UPLOAD_POST_FROM_API\",\n        payload: {\n          post: post,\n        },\n      }),\n    setCommentsData: (comments) =>\n      dispatch({\n        type: \"UPLOAD_COMMENTS_FROM_API\",\n        payload: {\n          comments: comments,\n        },\n      }),\n  };\n};\n\nexport default connect(mapPropsToState, mapDispatchToProps)(AddComment);\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport \"moment/locale/fr\";\nimport PostSetting from \"./PostSetting\";\nimport AddComment from \"./AddComment\";\nimport { likeAPost } from \"../models/postHandler\";\nimport { connect } from \"react-redux\";\n\nfunction Post(props) {\n  const [showSetting, setshowSetting] = useState(false);\n  const [commentshow, setcommentshow] = useState(false);\n  const [likes, setlikes] = useState(props.post.likeList.length);\n  const [liked, setliked] = useState(false);\n  const post = props.post;\n\n  function likePost(event) {\n    event.preventDefault();\n    let data = {\n      userId: props.user.id,\n    };\n    let tolike = liked ? 0 : 1;\n\n    likeAPost(null, parseInt(post.id), parseInt(tolike), data)\n      .then((res) => {\n        if (res.data.res === \"add\") {\n          setliked(true);\n          setlikes(likes + 1);\n        }\n        if (res.data.res === \"remove\") {\n          setliked(false);\n          setlikes(likes - 1);\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  // get likes from likepost table\n\n  useEffect(() => {\n    console.log(props);\n    if (props.post.likeList.length === 0) {\n      setliked(false);\n    } else {\n      props.post.likeList.forEach((like) => {\n        if (like.UserId === props.user.id) {\n          setliked(true);\n        } else {\n          setliked(false);\n        }\n      });\n    }\n  }, []);\n\n  //recuperer 'id de l'utilisateur depuis les props ou le la memoire\n  let authorRoles = props.user.roles;\n\n  // verifier si on est l'auteur du poste ou un admin\n  const author =\n    props.user.id === post.UserId || authorRoles.indexOf(\"ROLE_ADMIN\");\n\n  const setShow = () => setcommentshow(!commentshow);\n  // formater la date et heure en locale français\n  moment.locale(\"fr\");\n\n  console.log(liked);\n\n  return (\n    <article\n      className={!props.single ? \"post\" : \"post post-single\"}\n      data-id={post.id}\n    >\n      {!props.single ? null : (\n        <div className=\"post-close\" onClick={props.close}>\n          Fermer <span className=\"fa fa-close fa-2x\"></span>\n        </div>\n      )}\n      <div className=\"post_header\">\n        <h2 className=\"post_footer-author\">\n          <img src={post.avatar} alt=\"avatar\" width=\"30\" />\n          {post.userPseudo}\n        </h2>\n        {/* <h3>{props.post.title}</h3> */}\n        {author !== -1 && (\n          <span\n            className=\"fa fa-edit\"\n            onClick={() => setshowSetting(!showSetting)}\n          ></span>\n        )}\n      </div>\n      <Link className=\"post_image\" to={\"/post/\" + post.id}>\n        {post.type === \"video\" ? (\n          <video\n            poster=\"/bin/092020/poster-small-child-gets-caught-taking-selfie.gif\"\n            preload=\"auto\"\n            autoPlay=\"autoplay\"\n            muted=\"muted\"\n            loop=\"loop\"\n            id=\"gif\"\n          >\n            <source src={post.image} />\n          </video>\n        ) : (\n          <img className=\"freezeframe\" src={post.image} alt=\"gif\" />\n        )}\n      </Link>\n      <Link\n        to={\"/post/\" + post.id}\n        className={\n          post.description ? \"post_description\" : \"post_description vide\"\n        }\n      >\n        {post.description}\n      </Link>\n      <div className=\"post_footer\">\n        <span className=\"date\">{moment(props.post.createdAt).fromNow()}</span>\n        <span>\n          <span\n            className={liked ? \"fa fa-heart\" : \"far fa-heart\"}\n            onClick={likePost}\n          ></span>{\" \"}\n          {likes}\n        </span>\n        <span onClick={setShow}>\n          <span className=\"fa fa-comment-alt\"></span> {post.comments || 0}\n        </span>\n      </div>\n      <AddComment\n        show={commentshow}\n        showcommenthandler={setShow}\n        postId={post.id}\n        userId={props.user.userId}\n      />\n      {/* une sorte de modale pour afficher le boutton de supprition du poste */}\n      <PostSetting id={props.post.id} show={showSetting} />\n    </article>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  state: state,\n});\n\nexport default connect(mapStateToProps)(Post);\n","import React, { useEffect } from \"react\";\nimport Post from \"../components/Post\";\nimport { getAllPosts } from \"../models/postHandler\";\nimport { connect } from \"react-redux\";\n\nfunction HomeScreen(props) {\n\n  useEffect(() => {\n    getAllPosts().then((posts) => {\n      props.setPostsData(posts.data);\n    });\n  }, [props.state.screen]);\n\n  return (\n    <section className=\"home\">\n      {!props.state.posts\n        ? null\n        : props.state.posts.map((post, i) => {\n            return <Post key={post.id} post={post} />;\n          })}\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPostsData: (posts) =>\n      dispatch({\n        type: \"UPLOAD_POSTS_FROM_API\",\n        payload: {\n          posts: posts,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { addPost } from \"../models/postHandler\";\n\nfunction AddPost(props) {\n  let userId = props.userId;\n  if (localStorage.getItem(\"userDat\")) {\n    userId = JSON.parse(localStorage.getItem(\"userDat\")).userId;\n  }\n\n  const [image, setimage] = useState(null);\n  const [alt, setalt] = useState(null);\n  const [imageFile, setimageFile] = useState(null);\n  const [data, setdata] = useState({ userId: userId });\n  const [disabled, setdisabled] = useState(true);\n  const [error, seterror] = useState(null);\n  const history = useHistory();\n\n  function getImage(evt) {\n    var tgt = evt.target,\n      files = tgt.files;\n    console.log(files);\n    if (files.length > 0) {\n      if (!files[0].type.match(/^image/)) {\n        seterror(\"Le format du media n'est pas pris en compte !\");\n        return setdisabled(true);\n      } else {\n        setimageFile(files);\n        setalt(files[0].name);\n        setdisabled(false);\n        seterror(null);\n        setimage(\"\");\n      }\n    }\n\n    // FileReader support\n    if (FileReader && files && files.length) {\n      var fr = new FileReader();\n      fr.onload = function () {\n        setimage(fr.result);\n      };\n      fr.readAsDataURL(files[0]);\n    }\n    // Not supported\n    else {\n      // fallback -- perhaps submit the input to an iframe and temporarily store\n      // them on the server until the user's session ends.\n    }\n  }\n\n  useEffect(() => {\n    resetForm();\n  }, []);\n\n  function submitPostForm(e) {\n    e.preventDefault();\n    data.authorId = props.state.user.id;\n    data.pseudo = props.state.user.lastName;\n    addPost(data, imageFile, props.token)\n      .then((res) => {\n        if (res.status === 201) {\n          resetForm();\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => console.log(\"error:\", err));\n  }\n\n  function saveData(e) {\n    setdata({ ...data, [e.target.name]: e.target.value });\n    if (data.description !== undefined && data.title !== undefined) {\n      //setdisabled(false)\n    }\n  }\n\n  function resetForm() {\n    setimage(null);\n    document.querySelectorAll(\"input\").value = \"\";\n    document.querySelectorAll(\"textarea\").value = \"\";\n  }\n\n  return (\n    <section className=\"addpost\">\n      <h1>Ajouter un post !</h1>\n      <h2>\n        <span className=\"fa fa-info\"></span> Poster des image et, des GIFs\n        limitées à 2mb max. Une image ou un GIF est recquise pour poster\n      </h2>\n      <div>\n        <form\n          onSubmit={submitPostForm}\n          encType=\"multipart/form-data\"\n          className=\"px-3\"\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Titre:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              name=\"title\"\n              onChange={saveData}\n              placeholder=\"titre de la publication\"\n            />\n            <small className=\"text-muted\">un titre pour votre annonce</small>\n          </div>\n          <div className=\"form-group my-2\">\n            <div className=\"showImage\">\n              {error ? (\n                <div className=\"error\">{error}</div>\n              ) : (\n                <img src={image} alt={alt} />\n              )}\n            </div>\n            <input\n              className=\"form-control d-none\"\n              type=\"file\"\n              id=\"image\"\n              onChange={getImage}\n              name=\"image\"\n            />\n            <label\n              id=\"addImage\"\n              className=\"btn btn-success mt-2\"\n              htmlFor=\"image\"\n            >\n              Ajouter une image içi*\n            </label>\n            <br />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description:</label>\n            <textarea\n              className=\"form-control\"\n              type=\"text\"\n              name=\"description\"\n              id=\"description\"\n              onChange={saveData}\n              rows=\"5\"\n              placeholder=\"Description ...\"\n            ></textarea>\n            <small className=\"text-muted\">\n              Une description, ou ce que vous voulez dire\n            </small>\n          </div>\n          <div className=\"form-group mt-4\">\n            <button className=\"btn-submit\" disabled={disabled} type=\"submit\">\n              Poster ma publication\n            </button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleScreen: (screen) =>\n      dispatch({\n        type: \"CHANGE_SCREEN\",\n        payload: {\n          screen: screen,\n        },\n      }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getAllPostsWithId } from \"../models/postHandler\";\nimport { deleteUser } from \"../models/userHandler\";\n\nfunction ProfileScreen(props) {\n  const [postsCount, setpostsCount] = useState(0);\n\n  function deleteProfile() {\n    let confirmation = window.confirm(\n      \"Êtes-vous sur de vouloir supprimer votre compte ?\"\n    );\n    if (confirmation) {\n      deleteUser(props.state.user.id).then((res) => {\n        if (res.status === 200) {\n          localStorage.clear();\n          window.location.href = \"/\";\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    getAllPostsWithId(null, props.state.user.id)\n      .then((posts) => {\n        setpostsCount(posts.data.length);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <section className=\"profile\">\n      <div className=\"profile-header\">\n        <img src={props.state.user.avatar} alt=\"avatar\" />\n        <span>\n          Email: <strong>{props.state.user.email}</strong>\n        </span>\n        <span>\n          Nom prénom:{\" \"}\n          <strong>\n            {props.state.user.firstName}, {props.state.user.lastName}\n          </strong>\n        </span>\n        <span>\n          Roles: <strong>{props.state.user.roles}</strong>\n        </span>\n        <span>\n        Publications en ligne : <strong>{postsCount}</strong>\n        </span>\n      </div>\n      <div className=\"profile-action\">\n        <button className=\"delete\" onClick={deleteProfile}>\n          {\" \"}\n          Suprimer mon compte : <span className=\"fa fa-trash\"></span>\n        </button>\n        <Link to=\"edit-profile\" className=\"button edit-button\">\n          {\" \"}\n          Modifier mes données : <span className=\"fa fa-edit\"></span>\n        </Link>\n      </div>\n      <div className=\"profile-body\"></div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\n\nexport default connect(mapStateToProps)(ProfileScreen);\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport AddComment from \"./AddComment\";\nimport { connect } from \"react-redux\";\nimport {\n  deleteComment,\n  getAllCommentsByPostId,\n} from \"../models/commentHandler\";\nimport { useHistory } from \"react-router-dom\";\nimport { getUserById } from \"../models/userHandler\";\n\nfunction Comment(props) {\n  const [commentshow, setcommentshow] = useState(false);\n  const [user, setuser] = useState(null);\n  const history = useHistory();\n\n  function deletecomment() {\n    console.log(props.comment.id);\n    deleteComment(null, props.comment.id).then((res) => {\n      getAllCommentsByPostId(null, props.comment.PostId).then((comments) => {\n        props.setCommentsData(comments.data);\n      });\n    });\n  }\n\n  useEffect(() => {\n    getUserById(props.comment.UserId).then((user) => {\n      console.log(user.data);\n      setuser(user.data);\n    });\n  }, []);\n\n  const setShow = () => setcommentshow(!commentshow);\n\n  // formater la date et heure en locale français\n  moment.locale(\"fr\");\n  //check if author, admin or not\n  const author =\n    props.user.id === props.comment.UserId ||\n    props.user.roles.indexOf(\"ROLE_ADMIN\");\n\n  return !user ? null : (\n    <article\n      className={\n        props.comment.id !== props.comment.CommentId\n          ? \"comment child\"\n          : \"comment\"\n      }\n    >\n      <div className=\"comment_image\">\n        <img\n          onClick={() => history.push(\"/profile\")}\n          src={user.avatar}\n          alt=\"avatar\"\n        />\n      </div>\n      <div className=\"comment-body\">\n        <div className=\"comment-header d-flex flex-column justify-content-start align-items-start\">\n          <small className=\"font-weight-bold\">\n            {user.firstName + \"-\" + user.lastName}\n          </small>\n          <small className=\"comment-date\">\n            {moment(props.comment.createdAt).fromNow()}\n          </small>\n        </div>\n        <div className=\"comment-comment\">\n          <p>{props.comment.content}</p>\n        </div>\n        <div className=\"comment-footer\">\n          {props.comment.id !== props.comment.CommentId ? null : (\n            <button onClick={setShow}>\n              <span\n                className={!commentshow ? \"fa fa-arrow-left\" : \"fa fa-times\"}\n              ></span>{\" \"}\n              {!commentshow ? \"Répondre\" : \"fermer\"}\n            </button>\n          )}\n          {author !== -1 && (\n            <button onClick={deletecomment}>\n              <span className=\"fa fa-times\"></span> Supprimer\n            </button>\n          )}\n          <button\n            onClick={() =>\n              window.confirm(\n                \"le commentaire a été signalé a l'adminstrateur du groupe merci!\"\n              )\n            }\n          >\n            <span className=\"fa fa-exclamation-triangle\"></span> Signaler\n          </button>\n        </div>\n        <AddComment\n          show={commentshow}\n          showcommenthandler={setShow}\n          postId={props.comment.PostId}\n          userId={props.comment.UserId}\n          commentId={props.comment.id}\n        />\n      </div>\n    </article>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPostData: (post) =>\n      dispatch({\n        type: \"UPLOAD_POST_FROM_API\",\n        payload: {\n          post: post,\n        },\n      }),\n    setCommentsData: (comments) =>\n      dispatch({\n        type: \"UPLOAD_COMMENTS_FROM_API\",\n        payload: {\n          comments: comments,\n        },\n      }),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport Post from \"../components/Post\";\nimport Comment from \"../components/Comment\";\nimport { getPostById } from \"../models/postHandler\";\nimport { getAllCommentsByPostId } from \"../models/commentHandler\";\nimport { connect } from \"react-redux\";\n\nfunction PostScreen(props) {\n  let { id } = useParams();\n\n  const [post, setpost] = useState(props.state.post);\n  const [comments, setcomments] = useState(props.state.comments);\n  const history = useHistory();\n\n  useEffect(() => {\n    props.toggleScreen(\"post\");\n    getPostById(id)\n      .then((post) => {\n        setpost(post.data);\n        getAllCommentsByPostId(null, id).then((comments) => {\n          props.setCommentsData(comments.data);\n        });\n      })\n      .catch((err) => {\n        history.push(\"/\");\n      });\n  }, [id]);\n\n  function getComments(id) {\n    getAllCommentsByPostId(null, props.state.post.id).then((comments) => {\n      props.setCommentsData(comments.data);\n    });\n    getPostById(id).then((post) => {\n      setpost(post.data);\n    });\n  }\n\n  return !post ? null : (\n    <section className=\"postScreen\">\n      <h1>{post.title}</h1>\n      <Post post={post} />\n      <div className=\"comment-list\">\n        {!props.state.comments\n          ? null\n          : props.state.comments.map((comment) => {\n              return (\n                <Comment\n                  key={comment.id}\n                  uploadComment={getComments}\n                  comment={comment}\n                />\n              );\n            })}\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPostData: (post) =>\n      dispatch({\n        type: \"UPLOAD_POST_FROM_API\",\n        payload: {\n          post: post,\n        },\n      }),\n    setCommentsData: (comments) =>\n      dispatch({\n        type: \"UPLOAD_COMMENTS_FROM_API\",\n        payload: {\n          comments: comments,\n        },\n      }),\n    toggleScreen: (screen) =>\n      dispatch({\n        type: \"CHANGE_SCREEN\",\n        payload: {\n          screen: screen,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostScreen);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Post from \"../components/Post\";\nimport { getAllPostsWithId } from \"../models/postHandler\";\n\nfunction MesPostsScreen(props) {\n  let userId = props.state.user.id;\n\n  useEffect(() => {\n    getAllPostsWithId(null, userId)\n      .then((posts) => {\n        console.log(posts.data)\n        props.setMesPostsData(posts.data);\n        console.log(\"MES POSTS:\", posts.data);\n      })\n      .catch((err) => console.log(err));\n  },[userId]);\n\n\n\n  return (\n    <section className=\"home\">\n      {!props.state.posts ? null : props.state.posts.length == 0 ? (\n        <div className=\"alert alert-success mt-5\">\n          Vous n'avez aucune publications pour l'instant !\n        </div>\n      ) : (\n        props.state.posts.map((post, i) => {\n          return <Post key={post.id} post={post} />;\n        })\n      )}\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMesPostsData: (posts) =>\n      dispatch({\n        type: \"UPLOAD_POSTS_FROM_API\",\n        payload: {\n          posts: posts,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MesPostsScreen);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction Topbar(props) {\n  const [arrow, setarrow] = useState(false);\n\n  function toggleSideBarre() {\n    console.log(props);\n    props.toggleSideBarre(!props.state.showSideBarre);\n  }\n\n  const history = useHistory();\n\n  useEffect(() => {\n    setarrow(window.location.pathname.substr(1) !== \"\");\n  }, []);\n\n  function gotoProfile() {\n    props.toggleScreen(\"profile\");\n    history.push(\"/profile\");\n  }\n\n  console.log(props);\n\n  return (\n    <nav className=\"topbar\">\n      <div className=\"flex-row\">\n        <h1>\n          <Link to=\"/\">GROUPOMANIA</Link>\n        </h1>\n      </div>\n\n      <div className=\"menu-bar\">\n        <Link to=\"/profile\" className=\"button image\">\n          <span>{props.state.user.lastName} </span>\n          <img src={props.state.user.avatar} alt=\"groupomania\" />\n        </Link>\n        <Link className=\"button\" to=\"/ajouter\">\n          <span className=\"fa fa-plus\"></span>Ajouter un poste\n        </Link>\n        <span\n          onClick={toggleSideBarre}\n          style={{ fontSize: \"1.4em\" }}\n          className={!props.state.showSideBarre ? \"fa fa-gear\" : \"fa fa-close\"}\n        ></span>\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleSideBarre: (show) =>\n      dispatch({\n        type: \"SHOW_SIDE_BARRE\",\n        payload: {\n          showSideBarre: show,\n        },\n      }),\n    toggleScreen: (screen) =>\n      dispatch({\n        type: \"CHANGE_SCREEN\",\n        payload: {\n          screen: screen,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topbar);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction BottomNav(props) {\n  function navigate(e) {\n    props.toggleSideBarre(!props.state.showSideBarre);\n    props.toggleScreen(e.target.dataset.link);\n    let path = window.location.pathname;\n    if (path.match(/\\/post\\/\\d/)) {\n      path = \"/\";\n    }\n  }\n\n  useEffect(() => {\n    document.querySelector('#menu').addEventListener('click', ()=>{\n        document.querySelector('.leftasideDesktop').classList.contains('shown')  ?\n        document.querySelector('.leftasideDesktop').classList.remove('shown')  :\n        document.querySelector('.leftasideDesktop').classList.add('shown')  \n    })\n\n    document.querySelector('#lastPosts').addEventListener('click', ()=>{\n      document.querySelector('.bannerPosts').classList.contains('shown')  ?\n      document.querySelector('.bannerPosts').classList.remove('shown')  :\n      document.querySelector('.bannerPosts').classList.add('shown')  \n  })\n\n    let path = window.location.pathname;\n    if (path.match(/\\/post\\/\\d/)) {\n      path = \"/\";\n    }\n    switch (path) {\n      case \"/\":\n        props.toggleScreen(\"home\");\n        break;\n      case \"/profile\":\n        props.toggleScreen(\"profile\");\n        break;\n      case \"/ajouter\":\n        props.toggleScreen(\"plus\");\n        break;\n    }\n  }, []);\n\n  return (\n    <ul className=\"bottomnav\">\n      <li id=\"menu\">\n          <span\n            className=\"fa fa-bars\"\n          ></span>\n      </li>\n      <li>\n        <Link\n          className={\n            props.state.screen !== \"home\"\n              ? \"bottomnav_home\"\n              : \"bottomnav_home active\"\n          }\n          to=\"/\"\n        >\n          <span\n            data-link=\"home\"\n            onClick={navigate}\n            className=\"fa fa-home\"\n          ></span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          className={\n            props.state.screen !== \"plus\"\n              ? \"bottomnav_home\"\n              : \"bottomnav_home active\"\n          }\n          to=\"/ajouter\"\n        >\n          <span\n            data-link=\"plus\"\n            onClick={navigate}\n            className=\"fa fa-plus-circle\"\n          ></span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          className={\n            props.state.screen !== \"profile\"\n              ? \"bottomnav_home\"\n              : \"bottomnav_home active\"\n          }\n          to=\"/profile\"\n        >\n          <span\n            data-link=\"profile\"\n            onClick={navigate}\n            className=\"fa fa-user\"\n          ></span>\n        </Link>\n      </li>\n      <li id=\"lastPosts\">\n          <span\n            className=\"fa fa-file\"\n          ></span>\n      </li>\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleSideBarre: (show) =>\n      dispatch({\n        type: \"SHOW_SIDE_BARRE\",\n        payload: {\n          showSideBarre: !show,\n        },\n      }),\n    toggleScreen: (screen) =>\n      dispatch({\n        type: \"CHANGE_SCREEN\",\n        payload: {\n          screen: screen,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BottomNav);\n","import React from \"react\";\n\nexport default function Loader() {\n  return (\n    <section className=\"container\">\n      <svg\n        className=\"loader\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 340 340\"\n      >\n        <circle cx=\"170\" cy=\"170\" r=\"160\" stroke=\"#fd8864\" />\n        <circle cx=\"170\" cy=\"170\" r=\"135\" stroke=\"#0b93c9\" />\n        <circle cx=\"170\" cy=\"170\" r=\"110\" stroke=\"#fd8864\" />\n        <circle cx=\"170\" cy=\"170\" r=\"85\" stroke=\"#0b93c9\" />\n      </svg>\n    </section>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction LeftAside(props) {\n  const logout = () => {\n    localStorage.clear();\n    window.location.href = \"/\";\n  };\n  useEffect(() => {\n    document.querySelectorAll('.leftasideDesktop ul li').forEach(ele=>{\n      ele.addEventListener('click', ()=>{\n        document.querySelector('.leftasideDesktop').classList.contains('shown')  ?\n        document.querySelector('.leftasideDesktop').classList.remove('shown')  :\n        document.querySelector('.leftasideDesktop').classList.add('shown')  \n      })\n    })\n    return () => {\n      document.querySelectorAll('.leftasideDesktop ul li').forEach(ele=>{\n          ele.removeEventListener('click',null)\n      })\n    }\n  })\n\n  return (\n    <nav className=\"leftasideDesktop\">\n      <img src={props.state.user.avatar} alt=\"logo\" />\n      <h4>\n        {props.state.user.firstName} {props.state.user.lastName}\n      </h4>\n      <ul>\n        <li>\n          <Link to=\"/\">\n            <span className=\"fa fa-home\"></span>\n            <span>Accueil</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/ajouter\">\n            <span className=\"fa fa-plus\"></span>\n            <span>Ajouter un poste</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/mesposts\">\n            <span className=\"fa fa-comments\"></span>\n            <span>Mes postes</span>\n          </Link>\n        </li>\n        <hr />\n        <li>\n          <Link to=\"/profile\">\n            <span className=\"fa fa-user\"></span>\n            <span>Mon profil</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/editer-motdepasse\">\n            <span className=\"fa fa-user\"></span>\n            <span>Changer mot de passe</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/\" onClick={logout}>\n            <span className=\"fa fa-lock\"></span>\n            <span>Se deconnecter </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleSideBarre: (show) =>\n      dispatch({\n        type: \"SHOW_SIDE_BARRE\",\n        payload: {\n          showSideBarre: show,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftAside);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Post(props) {\n  console.log(props.post.image);\n  return !props.post ? null : (\n    <article className=\"post\">\n      <Link className=\"post_image\" to={\"/post/\" + props.post.id}>\n        <img className=\"freezeframe\" src={props.post.image} alt=\"gif\" />\n      </Link>\n    </article>\n  );\n}\nexport default Post;\n","import React, { useEffect, useState } from \"react\";\nimport PostBanner from \"./PostBanner\";\nimport { getLastsPosts } from \"../models/postHandler\";\nimport { connect } from \"react-redux\";\n\nfunction BannerPosts(props) {\n  const [posts, setposts] = useState(null);\n\n  useEffect(() => {\n    document.querySelectorAll('.post_banner').forEach(ele=>{\n      ele.addEventListener('click', ()=>{\n        document.querySelector('.bannerPosts').classList.contains('shown')  ?\n        document.querySelector('.bannerPosts').classList.remove('shown')  :\n        document.querySelector('.bannerPosts').classList.add('shown')  \n      })\n    })\n    getLastsPosts().then((posts) => {\n      console.log(posts);\n      props.setLastsPostsData(posts.data);\n      setposts(posts.data);\n    });\n    return () => {\n      document.querySelectorAll('.leftasideDesktop ul li').forEach(ele=>{\n          ele.removeEventListener('click',null)\n      })\n    }\n  }, [props.state.screen]);\n\n  return (\n    <section className=\"bannerPosts\">\n      <h2>Les derniers articles </h2>\n      <section className=\"posts\">\n        {!posts\n          ? null\n          : posts.map((post, i) => {\n              return <PostBanner class=\"post_banner\" key={post.id} post={post} />;\n            })}\n      </section>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setLastsPostsData: (posts) =>\n      dispatch({\n        type: \"UPLOAD_LASTS_POSTS_FROM_API\",\n        payload: {\n          lastposts: posts,\n        },\n      }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerPosts);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction UsersList(props) {\n\n\n  return (\n    <section className=\"bannerUsers\">\n      <ul className=\"userslist\">\n        {!props.users\n          ? null\n          : props.users.map((user, i) => {\n              return (\n                <li key={i}>\n                  <Link\n                    to={\"/users/profile/\" + user.id}\n                    className={props.state.user.id === user.id ? \"author\" : \"\"}\n                  >\n                    <img src={user.avatar} alt=\"user avatar\" />\n                  </Link>\n                </li>\n              );\n            })}\n      </ul>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ users: state.users, state: state });\nconst matDispatchToProps = (dispatch) => {\n  return {\n    setUsers: (users) => {\n      dispatch({\n        type: \"SET_USERS_LIST\",\n        payload: { users },\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, matDispatchToProps)(UsersList);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getCountAllPostsWithUserId } from \"../models/postHandler\";\nimport { deleteUser, getAllUsers, getUserById } from \"../models/userHandler\";\n\nfunction ProfileScreen(props) {\n  const [postsCount, setpostsCount] = useState(0);\n  let { id } = useParams();\n  const [user, setuser] = useState(null);\n  function deleteProfile() {\n    let confirmation = window.confirm(\n      \"Êtes-vous sur de vouloir supprimer votre compte ?\"\n    );\n    if (confirmation) {\n      deleteUser(user.id).then((res) => {\n        if(props.state.user.id === user.id){\n           if (res.status === 200) {\n            localStorage.clear();\n            window.location.href = \"/\";\n          }\n        }else{\n          if (res.status === 200) {\n            getAllUsers().then((users) => {\n              props.setUsers(users.data.users);\n            });\n          }\n        }\n       \n      });\n    }\n  }\n\n  useEffect(() => {\n    getUserById(id).then((user) => {\n      setuser(user.data);\n      getCountAllPostsWithUserId(null, user.data.id)\n        .then((posts) => {\n          setpostsCount(posts.data[0].count);\n        })\n        .catch((err) => console.log(err));\n    });\n  }, [id]);\n\n  return !user ? null : (\n    <section className=\"profile\">\n      <div className=\"profile-header\">\n        <img src={user.avatar} alt=\"avatar\" />\n        <span>\n          Email: <strong>{user.email}</strong>\n        </span>\n        <span>\n          Nom prénom:{\" \"}\n          <strong>\n            {user.firstName}, {user.lastName}\n          </strong>\n        </span>\n        <span>\n          Roles: <strong>{user.roles}</strong>\n        </span>\n        <span>\n          Publications en ligne : <strong>{postsCount}</strong>\n        </span>\n      </div>\n      <div className=\"profile-action\">\n        {props.state.user.roles.includes(\"ROLE_ADMIN\") ||\n        props.state.user.id === user.id ? (\n          <button className=\"delete\" onClick={deleteProfile}>\n            {\" \"}\n            Suprimer le compte : <span className=\"fa fa-trash\"></span>\n          </button>\n        ) : null}\n      </div>\n      <div className=\"profile-body\"></div>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\nconst matDispatchToProps = (dispatch) => {\n  return {\n    setUsers: (users) => {\n      dispatch({\n        type: \"SET_USERS_LIST\",\n        payload: { users },\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, matDispatchToProps)(ProfileScreen);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editUser } from \"../models/userHandler\";\n\nfunction ProfileScreen(props) {\n  const [image, setimage] = useState(props.state.user.avatar);\n  const [imageFile, setimageFile] = useState(null);\n  const [data, setdata] = useState({\n    firstName: props.state.user.firstName,\n    lastName: props.state.user.lastName,\n  });\n  const [error, seterror] = useState(null);\n  const [update, setupdate] = useState(false);\n\n  function getImage(evt) {\n    var tgt = evt.target,\n      files = tgt.files;\n    console.log(files);\n    if (files.length > 0) {\n      if (!files[0].type.match(/^image/)) {\n        seterror(\"Le format du media n'est pas pris en compte !\");\n      } else {\n        setimageFile(files);\n        seterror(null);\n        setimage(\"\");\n      }\n    }\n\n    // FileReader support\n    if (FileReader && files && files.length) {\n      var fr = new FileReader();\n      fr.onload = function () {\n        setimage(fr.result);\n      };\n      fr.readAsDataURL(files[0]);\n    }\n    // Not supported\n    else {\n      // fallback -- perhaps submit the input to an iframe and temporarily store\n      // them on the server until the user's session ends.\n    }\n  }\n\n  function submitPostForm(e) {\n    e.preventDefault();\n    editUser(\n      update,\n      data,\n      imageFile,\n      props.state.user.avatar,\n      props.state.user.id\n    )\n      .then((res) => {\n        if (res.status === 201) {\n          window.location.href = \"/profile\";\n        } else if (res.error) {\n          seterror(res.error);\n        }\n      })\n      .catch((err) => console.log(\"error:\", err));\n  }\n\n  function saveData(e) {\n    setdata({ ...data, [e.target.name]: e.target.value });\n    setupdate(true);\n  }\n\n  return (\n    <section className=\"editScreen\">\n      <div className=\"profile-header\">\n        <label htmlFor=\"file\">\n          <img id=\"avatar\" src={image} alt=\"avatar\" />\n        </label>\n        <input\n          type=\"file\"\n          name=\"image\"\n          onChange={getImage}\n          className=\"form-control\"\n          id=\"file\"\n        />\n      </div>\n      {!error ? null : <div className=\"warning\">{error}</div>}\n      <form onSubmit={submitPostForm} encType=\"multipart/form-data\">\n        <div className=\"form-group\">\n          <label htmlFor=\"firstName\">Nom: </label>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            onChange={saveData}\n            value={data.firstName}\n            className=\"form-control\"\n            id=\"firstName\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"lastName\">Prénom: </label>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            onChange={saveData}\n            value={data.lastName}\n            className=\"form-control\"\n            id=\"lastName\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Mettre a jour mon compte\n        </button>\n      </form>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\n\nexport default connect(mapStateToProps)(ProfileScreen);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editUser } from \"../models/userHandler\";\n\nfunction EditPasswordScreen(props) {\n  const [imageFile, setimageFile] = useState(null);\n  const [data, setdata] = useState({\n    firstName: props.state.user.firstName,\n    lastName: props.state.user.firstName,\n  });\n  const [error, seterror] = useState(null);\n  const [update, setupdate] = useState(false);\n\n  function submitPostForm(e) {\n    e.preventDefault();\n    editUser(update, data, imageFile)\n      .then((res) => {\n        if (res.status === 201) {\n          window.location.href = \"/profile\";\n        } else if (res.error) {\n          seterror(res.error);\n        }\n      })\n      .catch((err) => console.log(\"error:\", err));\n  }\n\n  function saveData(e) {\n    setdata({ ...data, [e.target.name]: e.target.value });\n    setupdate(true);\n  }\n\n  return (\n    <section className=\"editScreen\">\n      {!error ? null : <div className=\"warning\">{error}</div>}\n      <form onSubmit={submitPostForm} encType=\"multipart/form-data\">\n        <div className=\"form-group\">\n          <label htmlFor=\"password-last\">Ancien mot de passe</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"password-last\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Nouveau mot de passe</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"password\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password-confirm\">Confirmer le mot de passe</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={saveData}\n            className=\"form-control\"\n            id=\"password-confirm\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Mettre a jour mon compte\n        </button>\n      </form>\n    </section>\n  );\n}\n\nconst mapStateToProps = (state) => ({ state: state });\n\nexport default connect(mapStateToProps)(EditPasswordScreen);\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LogScreen from \"./screens/LogScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AddPost from \"./screens/AddPost\";\nimport { getAllUsers, logWithToken } from \"./models/userHandler\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport PostScreen from \"./screens/PostScreen\";\nimport MesPostsScreen from \"./screens/MesPostsScreen\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Topbar from \"./components/Topbar\";\nimport BottomNav from \"./components/BottomNav\";\nimport Loader from \"./components/Loader\";\nimport \"./sass/app.scss\";\nimport LeftAsideDesktop from \"./components/LeftAsideDesktop\";\nimport BannerPosts from \"./components/BannerPosts\";\nimport UsersList from \"./components/UsersList\";\nimport UserProfileScreen from \"./screens/UserProfileScreen\";\nimport EditScreen from \"./screens/EditScreen\";\nimport EditPasswordScreen from \"./screens/EditPasswordScreen\";\n\nfunction App(props) {\n  const [showAside, setshowAside] = useState(false);\n  const [register, setregister] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"token\")\n    if ( token && !props.logged) {\n      getAllUsers(token).then((users) => {\n        props.setUsers(users.data.users);\n      });\n      logWithToken(token)\n        .then((res) => {\n          props.setUserData(res.data.user);\n          props.setLoggin(true);\n          props.toggleLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          localStorage.removeItem(\"token\");\n          history.push(\"/\");\n        });\n    } else {\n      props.toggleLoading(false);\n    }\n  }, []);\n\n  const showAsideHandler = () => {\n    setshowAside(!showAside);\n  };\n\n  const showRegister = () => {\n    setregister(!register);\n  };\n\n  return props.state.loading ? (\n    <Loader />\n  ) : !props.state.logged ? (\n    !props.state.showRegister ? (\n      <LogScreen />\n    ) : (\n      <RegisterScreen />\n    )\n  ) : (\n    <div className=\"app\">\n      <Router history={history}>\n        <Topbar />\n        <UsersList />\n        <LeftAsideDesktop />\n        <main className=\"main\">\n          <Switch>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n            <Route path=\"/post/:id\">\n              <PostScreen />\n            </Route>\n            <Route path=\"/ajouter\">\n              <AddPost />\n            </Route>\n            <Route path=\"/profile\">\n              <ProfileScreen />\n            </Route>\n            <Route path=\"/edit-profile\">\n              <EditScreen />\n            </Route>\n            <Route path=\"/editer-motdepasse\">\n              <EditPasswordScreen />\n            </Route>\n            <Route path=\"/users/profile/:id\">\n              <UserProfileScreen />\n            </Route>\n            <Route path=\"/mesposts\">\n              <MesPostsScreen />\n            </Route>\n            <Route path=\"/not-found\" />\n          </Switch>\n        </main>\n        <BannerPosts />\n        <BottomNav />\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  state: state,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUserData: (data) =>\n      dispatch({\n        type: \"LOGIN_USER\",\n        payload: {\n          user: data,\n        },\n      }),\n    setLoggin: () =>\n      dispatch({\n        type: \"SET_LOGGIN\",\n        payload: {\n          loggin: true,\n        },\n      }),\n    toggleLoading: (bool) =>\n      dispatch({\n        type: \"TOGGLE_LOADING\",\n        payload: {\n          loading: bool,\n        },\n      }),\n    setUsers: (users) => {\n      dispatch({\n        type: \"SET_USERS_LIST\",\n        payload: { users },\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\n  user: null,\n  post: null,\n  showLogin: true,\n  showRegister: false,\n  logged: false,\n  showSideBarre: false,\n  screen: \"home\",\n  loggin: false,\n  comments: null,\n  showCommentForm: false,\n  loading: true,\n  users: [],\n  lastposts: [],\n  mesposts: []\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return {\n        ...state,\n        user: action.payload.user,\n        showLogin: false,\n        logged: true,\n      };\n    case \"UPLOAD_POSTS_FROM_API\":\n      return { ...state, posts: action.payload.posts };\n    case \"UPLOAD_LASTS_POSTS_FROM_API\":\n      return { ...state, lastposts: action.payload.posts };\n    case \"UPLOAD_POST_FROM_API\":\n      return { ...state, post: action.payload.post };\n    case \"UPLOAD_MES_POSTS_FROM_API\":\n      return { ...state, mespost: action.payload.posts };\n    case \"UPLOAD_COMMENTS_FROM_API\":\n      return { ...state, comments: action.payload.comments };\n    case \"SHOW_SIDE_BARRE\":\n      return { ...state, showSideBarre: action.payload.showSideBarre };\n    case \"SHOW_COMMENT_FORM\":\n      return { ...state, showCommentForm: action.payload.showCommentForm };\n    case \"CHANGE_SCREEN\":\n      return { ...state, screen: action.payload.screen };\n    case \"SET_LOGGIN\":\n      return { ...state, loggin: action.payload.loggin };\n    case \"GOTO_REGISTER\":\n      return { ...state, showRegister: action.payload.showRegister };\n    case \"TOGGLE_LOADING\":\n      return { ...state, loading: action.payload.loading };\n    case \"SET_USERS_LIST\":\n      return { ...state, users: action.payload.users };\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nlet store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}